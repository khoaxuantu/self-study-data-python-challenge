# -*- coding: utf-8 -*-
"""PROJECT_2 - Như Thủy Phạm Thị.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/110aly-7oo995tWm4Vdl0WSaBUGci3xrg
"""

class Calculator:
    def __init__(self):
        self.current_value = 0

    def add(self, a, b):
        return a + b

    def subtract(self, a, b):
        return a - b

    def multiply(self, a, b):
        return a * b

    def divide(self, a, b):
        if b != 0:
            return a / b
        else:
            return "Error: Division by zero"

    def modulo(self, a, b):
        return a % b

    def calculate(self, expression):
        try:
            # Evaluate the expression
            result = eval(expression)
            self.current_value = result
            return result
        except Exception as e:
            return f"Error: {e}"

    def continuous_calculation(self, operation, value):
        expression = f"{self.current_value} {operation} {value}"
        return self.calculate(expression)

# Usage
calc = Calculator()

# Basic operations
print("Addition:", calc.add(5, 3))
print("Subtraction:", calc.subtract(7, 2))
print("Multiplication:", calc.multiply(4, 2))
print("Division:", calc.divide(20, 2))
print("Modulo:", calc.modulo(11, 3))

# Multiple number pairs
expression1 = "2 + 3 * 4"
print("Multiple pairs:", calc.calculate(expression1))

# Grouped operations
expression2 = "(3+ 3)/2"
print("Grouped operations:", calc.calculate(expression2))

# Continuous calculations
calc.calculate("5 + 3")  # Initial calculation
print("Continuous calc (add 4):", calc.continuous_calculation("+", 4))
print("Continuous calc (multiply by 2):", calc.continuous_calculation("*", 2))
#Good job!!
#Consider making this program a input-output type!